#include <iostream>
#include <stdio.h>
using namespace std;

enum Temp_funct{cool,heat,stay_const
};

class Thermos{
public:
    Temp_funct Function;
    int Current_temp;
    int Des_temp;

void cool(int &X, int const Y){

    while(X > Y && Function==0){
        X--;
        cout<<X<<endl;
    }//end of while
}//end of cool
void heat(int &X, int const Y){
while(X < Y && Function == 1){
    X++;
    cout<<X<<endl;
}//end of while
}//end of heat
void stay_const(int &X, int const Y){
while(X > Y && Function == 2){
    X--;
    cout<<X<<endl;
}
while(X < Y && Function == 2){
    X++;
    cout<<X<<endl;
}//end of while
}//end of stay_const
void controller(Thermos *V){
char ch = getchar();
while (ch != '\r'){
    if(ch == 'w'){
        this->Des_temp++;
        cout<<this->Des_temp<<endl;
    }//end of if
    else if (ch == 's'){
        this->Des_temp--;
        cout<<this->Des_temp<<endl;
    }//end of else if
    ch = getchar();
}//end of while
}//end of controller

~Thermos(){
cout<<endl<<"all done";
}//Thermos end
};

int main()
{
    //creating a new pointer that points to an instance of class Thermos
Thermos *living_room = new Thermos;
//setting some variables from class Thermos
living_room->Current_temp = 78;
living_room->Des_temp = 0;
living_room->Function = stay_const;
living_room->controller(living_room);
//calling functions from class Thermos
living_room->cool(living_room->Current_temp, living_room->Des_temp);
living_room->heat(living_room->Current_temp, living_room->Des_temp);
living_room->stay_const(living_room->Current_temp, living_room->Des_temp);
//writing results of functions to console
cout<<endl<<living_room->Current_temp<<endl<< living_room->Des_temp;
//clearing pointer
delete living_room;
}
